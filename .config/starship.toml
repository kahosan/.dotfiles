# Get editor completions based on the config shcema
"$schema" = 'https://starship.rs/config-schema.json'
add_newline = false

format = """
${env_var.ST_PREFIX}\
$username\
$directory\
$git_branch\
$git_commit\
$git_state\
$git_metrics\
$git_status\
$nodejs\
$rust\
$golang\
$python\
$fill\
$time\
$line_break\
$character\
"""

[fill]
symbol = " "

[character]
success_symbol = "[](bold red)"
error_symbol = "[](bold red)"

[username]
style_user = 'bold red'
style_root = 'bold white'
format =  "\\[[megumin]($style) in "
show_always = true
aliases = { "corpuser034g" = "matchai" }

[time]
style = "bold bright-black"
format = "[$time]($style)"
utc_time_offset = "+8"
disabled = false

[directory]
truncation_length = 5
format = "\\[[$path]($style)[$lock_symbol]($lock_style)\\] "

[git_branch]
truncation_symbol = ""
symbol = ""
style = "purple"

[git_commit]
commit_hash_length = 7
style = "bold white"

[git_state]
format = '[\($state( $progress_current of $progress_total)\)]($style) '

[git_status]
format = '([$all_status]($style) )'
conflicted = "*"
# ahead = ">"
# behind = "<"
# diverged = "_"
untracked = "+"
stashed = "#"
modified = "_"
staged = "/"
renamed = "="
deleted = "-"
style = "white"

[nodejs]
format = "via \\[[$version]($style)\\] "
style = "bold green"
detect_files = ["package.json"]

[golang]
format = "via \\[[$version]($style)\\] "
style = "bold blue"

[python]
format = "via \\[[$version( $virtualenv)]($style)\\] "
style = "bold cyan"

[rust]
format = "via \\[[$version]($style)\\] "
style = "bold red"

[lua]
format = "via \\[[$version]($style)\\] "
style = "bold blue"

[env_var.ST_PREFIX]
format = "$env_value"

